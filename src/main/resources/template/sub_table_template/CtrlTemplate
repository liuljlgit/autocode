package ${controllerPackageOutPath};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.cloud.common.base.BaseController;
import com.cloud.common.webcomm.ReqEntity;
import com.alibaba.fastjson.JSONObject;
import com.cloud.common.complexquery.QueryExample;
import java.util.*;
import ${inftServiceFullPath};
import ${entityFullPath};
import ${respFullPath};

/**
 * ${entityName}Ctrl 控制层方法
 * @author lijun
 */
@RestController
public class ${entityName}Ctrl extends BaseController {

    @Autowired
    private ${inftServiceName} ${implServiceName};

   /**
   * ${entityName} 根据主键获取单个数据
   * @return
   * @throws Exception
   */
   @GetMapping(value = "/${entityObj}/{${entityId}}/{keyToHash}")
   public String get${entityName}(@PathVariable(value="${entityId}") ${entityIdType} ${entityId},@PathVariable(value="keyToHash") Long keyToHash) throws Exception {
      if(Objects.isNull(${entityId})){
         throw new Exception("请输入要获取的数据的ID") ;
      }
      ${entityName} ${entityObj} = ${implServiceName}.load${entityName}ByKey(${entityId},keyToHash);
      JSONObject resp = new JSONObject();
      resp.put("${entityObj}",new ${entityName}Resp(${entityObj}));
      return formatResponseParams(EXEC_OK,resp);
   }

  /**
   * ${entityName} 新增或者修改记录，根据主键判断，主键为空则新增，否则修改。
   * @return
   * @throws Exception
   */
   @PostMapping(value = "/${entityObj}")
   public String save${entityName}(@RequestBody ReqEntity reqEntity) throws  Exception{
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.getReqBody().toJSONString(), ${entityName}.class);
       ${implServiceName}.save${entityName}(${entityObj});
       return formatResponseParams(EXEC_OK,null);
   }

   /**
    * ${entityName} 根据主键删除数据
    * @return
    * @throws Exception
    */
    @DeleteMapping(value = "/${entityObj}/{${entityId}}/{keyToHash}")
    public String delete${entityName}(@PathVariable(value="${entityId}") ${entityIdType} ${entityId},@PathVariable(value="keyToHash") Long keyToHash) throws  Exception{
        if(Objects.isNull(${entityId})){
           throw new Exception("入参请求异常") ;
        }
        ${implServiceName}.delete${entityName}ByKey(${entityId},keyToHash);
        return formatResponseParams(EXEC_OK,null);
    }

}
