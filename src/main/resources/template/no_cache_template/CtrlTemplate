package ${controllerPackageOutPath};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.cloud.common.exception.BusiException;
import com.alibaba.fastjson.JSONObject;
import com.cloud.common.complexquery.QueryExample;
import com.cloud.common.webcomm.RespEntity;
import java.util.*;
import ${inftServiceFullPath};
import ${entityFullPath};
import ${respFullPath};

/**
 * ${entityName}Ctrl 控制层方法
 * @author lijun
 */
@RestController
public class ${entityName}Ctrl{

    @Autowired
    private I${entityName}Service ${entityObj}Service;

   /**
   * ${entityName} 根据主键获取单个数据
   * @return
   * @throws Exception
   */
   @GetMapping(value = "/${entityObj}/{${entityId}}")
   public String load${entityName}ByKey(@PathVariable(value="${entityId}") ${entityIdType} ${entityId}) throws Exception {
      if(Objects.isNull(${entityId})){
         throw new BusiException("请输入要获取的数据的ID") ;
      }
      ${entityName} ${entityObj} = ${implServiceName}.load${entityName}ByKey(${entityId});
      return RespEntity.ok(new ${entityName}Resp(${entityObj}));
   }

   /**
    * ${entityName} 根据条件获取单个数据
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/selectone")
   public String selectOne${entityName}(@RequestBody JSONObject reqEntity) throws Exception {
       ${entityName} ${entityObj}Req = JSONObject.parseObject(reqEntity.toJSONString(), ${entityName}.class);
       ${entityName} ${entityObj} = ${entityObj}Service.selectOne${entityName}(${entityObj}Req);
       if(Objects.isNull(${entityObj})){
           throw new BusiException("没有符合条件的记录");
       }
       return RespEntity.ok(new ${entityName}Resp(${entityObj}));
   }

   /**
    * ${entityName} 根据条件获取单个数据
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/criteria/selectone")
   public String selectOne${entityName}Example(@RequestBody JSONObject reqEntity) throws Exception {
       ${entityName} ${entityObj}Req = JSONObject.parseObject(reqEntity.toJSONString(), ${entityName}.class);
       QueryExample queryExample = new QueryExample();
       ${entityName} ${entityObj} = ${entityObj}Service.selectOne${entityName}(queryExample);
       if(Objects.isNull(${entityObj})){
           throw new BusiException("没有符合条件的记录");
       }
       return RespEntity.ok(new ${entityName}Resp(${entityObj}));
   }

  /**
   * ${entityName} 根据实体对象查询列表
   * @return
   * @throws Exception
   */
   @PostMapping(value = "/${entityObj}/list")
   public String get${entityName}ListByPage(@RequestBody JSONObject reqEntity) throws Exception {
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.toJSONString(), ${entityName}.class);
       JSONObject resp = ${implServiceName}.getPage${entityName}(${entityObj});
       return RespEntity.ok(resp);
   }

   /**
    * 复杂查询
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/criteria/list")
   public String get${entityName}ListExampleByPage(@RequestBody JSONObject reqEntity) throws Exception {
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.toJSONString(), ${entityName}.class);
       QueryExample queryExample = new QueryExample();
       JSONObject resp = ${entityObj}Service.getPage${entityName}Example(queryExample);
       return RespEntity.ok(resp);
   }

  /**
   * ${entityName} 新增或者修改记录，根据主键判断，主键为空则新增，否则修改。
   * @return
   * @throws Exception
   */
   @PostMapping(value = "/${entityObj}")
   public String save${entityName}(@RequestBody JSONObject reqEntity) throws  Exception{
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.toJSONString(), ${entityName}.class);
       ${implServiceName}.save${entityName}(${entityObj});
       return RespEntity.ok();
   }

   /**
    * ${entityName} 根据主键删除数据
    * @return
    * @throws Exception
    */
    @DeleteMapping(value = "/${entityObj}/{${entityId}}")
    public String delete${entityName}(@PathVariable(value="${entityId}") ${entityIdType} ${entityId}) throws  Exception{
        if(Objects.isNull(${entityId})){
           throw new BusiException("入参请求异常") ;
        }
        ${implServiceName}.delete${entityName}ById(${entityId});
        return RespEntity.ok();
    }


}
