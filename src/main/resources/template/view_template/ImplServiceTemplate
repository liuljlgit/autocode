package ${servicePackageOutPath}.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.cloud.common.complexquery.QueryExample;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.*;
import org.springframework.util.CollectionUtils;
import com.cloud.common.constant.IConst;
import org.springframework.cache.annotation.*;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.data.redis.core.RedisTemplate;
import java.util.stream.Collectors;
import com.alibaba.fastjson.JSONObject;
import ${inftServiceFullPath};
import ${inftDaoFullPath};
import ${entityFullPath};

/**
 * I${entityName}Service service接口类
 * @author lijun
 */
@Service("${implServiceName}")
public class ${entityName}ServiceImpl implements ${inftServiceName}{

    private static final Logger logger = LoggerFactory.getLogger(${entityName}ServiceImpl.class);

    @Autowired
    private ${inftDaoName} ${implDaoName};

    /**
     * 普通查询获取单个结果
     * @param ${entityObj}
     * @return
     * @throws Exception
     */
    @Override
    public ${entityName} selectOne${entityName}(${entityName} ${entityObj}) throws Exception {
        List<${entityName}> list = find${entityName}List(${entityObj});
        if(!CollectionUtils.isEmpty(list)){
            return list.get(0);
        }
        return null;
    }

    /**
     * 复杂查询获取单个结果
     * @param queryExample
     * @return
     * @throws Exception
     */
    @Override
    public ${entityName} selectOne${entityName}Example(QueryExample queryExample) throws Exception {
        List<${entityName}> list = find${entityName}ListExample(queryExample);
        if(!CollectionUtils.isEmpty(list)){
            return list.get(0);
        }
        return null;
    }

    /**
     * 查询记录总数
     * @param ${entityObj}
     * @return
     * @throws Exception
     */
    @Override
    public Long get${entityName}Count(${entityName} ${entityObj}) throws Exception{
        if(Objects.isNull(${entityObj})){
            throw new Exception("查询参数不能为空");
        }
        Long count = ${entityObj}Dao.get${entityName}Count(${entityObj});
        return count;
    }

    /**
     * 分页查询列表
     * @param ${entityObj}
     * @return
     * @throws Exception
     */
    @Override
    public JSONObject get${entityName}ListByPage(${entityName} ${entityObj}) throws Exception{
        if(Objects.isNull(${entityObj})){
            throw new Exception("查询参数不能为空");
        }
        if(Objects.isNull(${entityObj}.getPage()) || Objects.isNull(${entityObj}.getPageSize()) || IConst.PAGE_NO_USE.equals(${entityObj}.getPage())){
            throw new Exception("分页请求入参异常");
        }
        JSONObject resp = new JSONObject();
        ${entityObj}.setTotal(get${entityName}Count(${entityObj}).intValue());
        resp.put("total",${entityObj}.getTotal());
        resp.put("totalPage",${entityObj}.getTotalPage());
        resp.put("list",find${entityName}List(${entityObj}));
        return resp;
    }

    /**
     * 查询列表
     * @param ${entityObj}
     * @return
     * @throws Exception
     */
    @Override
    public List<${entityName}> find${entityName}List(${entityName} ${entityObj}) throws Exception{
        if(Objects.isNull(${entityObj})){
            throw new Exception("查询参数不能为空");
        }
        return ${entityObj}Dao.get${entityName}List(${entityObj});
    }

    /**
     * 查询总记录数 Example
     * @param queryExample
     * @return
     * @throws Exception
     */
    @Override
    public Long get${entityName}CountExample(QueryExample queryExample) throws Exception {
        if(Objects.isNull(queryExample)){
            throw new Exception("查询参数不能为空");
        }
        return ${entityObj}Dao.get${entityName}CountExample(queryExample);
    }

    /**
     * 分页查询列表 Example
     * @param queryExample
     * @return
     * @throws Exception
     */
    @Override
    public JSONObject get${entityName}ListExampleByPage(QueryExample queryExample) throws Exception {
        if(Objects.isNull(queryExample)){
            throw new Exception("查询参数不能为空");
        }
        if(Objects.isNull(queryExample.getPage()) || Objects.isNull(queryExample.getPageSize()) || IConst.PAGE_NO_USE.equals(queryExample.getPage())){
            throw new Exception("分页请求入参异常");
        }
        JSONObject resp = new JSONObject();
        queryExample.setTotal(get${entityName}CountExample(queryExample).intValue());
        resp.put("total",queryExample.getTotal());
        resp.put("totalPage",queryExample.getTotalPage());
        resp.put("list",find${entityName}ListExample(queryExample));
        return resp;
    }

    /**
     * 获取列表 Example
     * @param queryExample
     * @return
     */
    @Override
    public List<${entityName}>  find${entityName}ListExample(QueryExample queryExample) throws Exception {
        if(Objects.isNull(queryExample)){
            throw new Exception("查询参数不能为空");
        }
        return ${entityObj}Dao.get${entityName}ListExample(queryExample);
    }

}
