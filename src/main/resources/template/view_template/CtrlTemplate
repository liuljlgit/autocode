package ${controllerPackageOutPath};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.cloud.common.base.BaseController;
import com.cloud.common.webcomm.ReqEntity;
import com.alibaba.fastjson.JSONObject;
import com.cloud.common.complexquery.QueryExample;
import java.util.*;
import ${inftServiceFullPath};
import ${entityFullPath};
import ${respFullPath};

/**
 * ${entityName}Ctrl 控制层方法
 * @author lijun
 */
@RestController
public class ${entityName}Ctrl extends BaseController {

    @Autowired
    private ${inftServiceName} ${implServiceName};

   /**
    * ${entityName} 根据条件获取单个数据
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/selectone")
   public String selectOne${entityName}(@RequestBody ReqEntity reqEntity) throws Exception {
       ${entityName} ${entityObj}Req = JSONObject.parseObject(reqEntity.getReqBody().toJSONString(), ${entityName}.class);
       ${entityName} ${entityObj} = ${entityObj}Service.selectOne${entityName}(${entityObj}Req,true);
       if(Objects.isNull(${entityObj})){
           throw new Exception("没有符合条件的记录");
       }
       JSONObject resp = new JSONObject();
       resp.put("${entityObj}",new ${entityName}Resp(${entityObj}));
       return formatResponseParams(EXEC_OK,resp);
   }

   /**
    * ${entityName} 根据条件获取单个数据
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/criteria/selectone")
   public String selectOne${entityName}Example(@RequestBody ReqEntity reqEntity) throws Exception {
       ${entityName} ${entityObj}Req = JSONObject.parseObject(reqEntity.getReqBody().toJSONString(), ${entityName}.class);
       QueryExample queryExample = new QueryExample();
       ${entityName} ${entityObj} = ${entityObj}Service.selectOne${entityName}Example(queryExample,true);
       if(Objects.isNull(${entityObj})){
           throw new Exception("没有符合条件的记录");
       }
       JSONObject resp = new JSONObject();
       resp.put("${entityObj}",new ${entityName}Resp(${entityObj}));
       return formatResponseParams(EXEC_OK,resp);
   }

  /**
   * ${entityName} 根据实体对象查询列表
   * @return
   * @throws Exception
   */
   @PostMapping(value = "/${entityObj}/list")
   public String get${entityName}ListByPage(@RequestBody ReqEntity reqEntity) throws Exception {
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.getReqBody().toJSONString(), ${entityName}.class);
       JSONObject resp = ${implServiceName}.get${entityName}ListByPage(${entityObj});
       return formatResponseParams(EXEC_OK,resp);
   }

   /**
    * 复杂查询
    * @return
    * @throws Exception
    */
   @PostMapping(value = "/${entityObj}/criteria/list")
   public String get${entityName}ListExampleByPage(@RequestBody ReqEntity reqEntity) throws Exception {
       ${entityName} ${entityObj} = JSONObject.parseObject(reqEntity.getReqBody().toJSONString(), ${entityName}.class);
       QueryExample queryExample = new QueryExample();
       JSONObject resp = ${entityObj}Service.get${entityName}ListExampleByPage(queryExample);
       return formatResponseParams(EXEC_OK, resp);
   }


}
