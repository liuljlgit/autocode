package com.gen.test.entity;

import org.springframework.util.CollectionUtils;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * DailyAmountExample
 * 注意:Criteria代表着一个大括号，里面有很多表达式
 * Criterion代表着一个表达式
 */
public class DailyAmountExample{

    private String orderByClause;
    private int index;
    private int pageSize;
    private List<Criteria> criterias;

    public Criteria createCriteria(String prefix){
        Criteria criteria = new Criteria();
        criteria.setOptStr(prefix);
        addCriteria(criteria);
        return criteria;
    }

    public void addCriteria(Criteria criteria){
        if(CollectionUtils.isEmpty(criterias)){
            criterias = new ArrayList<>();
        }
        criterias.add(criteria);
    }


    /**
     * Criteria类,每个Criteria有多个Criterion表达式
     */
    public static class Criteria {

        /**
         * field comment:一个Example有多个Criteria,
         */
        private List<Criterion> criterions;

        /**
         * field comment:类型,是and还是or 这个字段是为了两个表达式optStr CriteriaA optStr CriteriaB 如果是最前面一个Criteria,那么应该设置为""
         */
        private String optStr;

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            if(CollectionUtils.isEmpty(criterions)){
                criterions = new ArrayList<>();
            }
            Criterion criterion = new Criterion();
            criterion.setCondition(condition);
            criterion.setNoValue(true);
            criterions.add(criterion);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            if(CollectionUtils.isEmpty(criterions)){
                criterions = new ArrayList<>();
            }
            Criterion criterion = new Criterion();
            criterion.setCondition(condition);
            if(value instanceof Collection){
                criterion.setList(value);
                criterion.setListValue(true);
            }else{
                criterion.setValue1(value);
                criterion.setOneValue(true);
            }
            criterions.add(criterion);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            if(CollectionUtils.isEmpty(criterions)){
                criterions = new ArrayList<>();
            }
            Criterion criterion = new Criterion();
            criterion.setCondition(condition);
            criterion.setValue1(value1);
            criterion.setValue2(value2);
            criterion.setSecondValue(true);
        }

        protected void addCriterion(String condition, Object value1, Object value2, Object value3, String property) {
            if (value1 == null || value2 == null || value3 == null) {
                throw new RuntimeException("funtion values for " + property + " cannot be null");
            }
            if(CollectionUtils.isEmpty(criterions)){
                criterions = new ArrayList<>();
            }
            Criterion criterion = new Criterion();
            criterion.setCondition(condition);
            criterion.setValue1(value1);
            criterion.setValue2(value2);
            criterion.setValue2(value3);
            criterion.setThirdValue(true);
        }

        //需进行以下操作判断：
        //IsNull、IsNotNull、EqualTo、NotEqualTo、GreaterThan、GreaterThanOrEqualTo、LessThan、LessThanOrEqualTo、Like、NotLike、In、NotIn、Between、NotBetween
        public Criteria bdIdIsNull(String prefix) {
            addCriterion(prefix+"bd_id is null");
            return (Criteria) this;
        }
        public Criteria bdIdIsNotNull(String prefix) {
            addCriterion(prefix+"bd_id is not null");
            return (Criteria) this;
        }
        public Criteria bdIdEqualTo(String prefix,Long value) {
            addCriterion(prefix+"bd_id =", value, "bdId");
            return (Criteria) this;
        }
        public Criteria bdIdNotEqualTo(String prefix,Long value) {
            addCriterion(prefix+"bd_id <>", value, "bdId");
            return (Criteria) this;
        }
        public Criteria bdIdGreaterThan(String prefix,Long value) {
            addCriterion(prefix+"bd_id >", value, "bdId");
            return (Criteria) this;
        }
        public Criteria bdIdGreaterThanOrEqualTo(String prefix,Long value) {
            addCriterion(prefix+"bd_id >=", value, "bdId");
            return (Criteria) this;
        }
        public Criteria andBdIdLessThan(String prefix,Long value) {
            addCriterion(prefix+"bd_id <", value, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdLessThanOrEqualTo(String prefix,Long value) {
            addCriterion(prefix+"bd_id <=", value, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdLike(String prefix,String value) {
            addCriterion(prefix+"bd_id like", value, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdNotLike(String prefix,String value) {
            addCriterion(prefix+"bd_id not like", value, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdIn(String prefix,List<Long> values) {
            addCriterion(prefix+"bd_id in", values, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdNotIn(String prefix,List<Long> values) {
            addCriterion(prefix+"bd_id not in", values, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdBetween(String prefix,Long value1, Long value2) {
            addCriterion(prefix+"bd_id between", value1, value2, "bdId");
            return (Criteria) this;
        }

        public Criteria andBdIdNotBetween(String prefix,Long value1, Long value2) {
            addCriterion(prefix+"bd_id not between", value1, value2, "bdId");
            return (Criteria) this;
        }

        public String getOptStr() {
            return optStr;
        }

        public void setOptStr(String optStr) {
            this.optStr = optStr;
        }

        public List<Criterion> getCriterions() {
            return criterions;
        }

        public void setCriterions(List<Criterion> criterions) {
            this.criterions = criterions;
        }
    }

    /**
     * 表达式类
     */
    public static class Criterion {
        private String condition;
        private Object value1;
        private Object value2;
        private Object value3;
        private Object list;
        private boolean noValue;
        private boolean oneValue;
        private boolean secondValue;
        private boolean thirdValue;
        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public void setCondition(String condition) {
            this.condition = condition;
        }

        public Object getValue1() {
            return value1;
        }

        public void setValue1(Object value1) {
            this.value1 = value1;
        }

        public Object getValue2() {
            return value2;
        }

        public void setValue2(Object value2) {
            this.value2 = value2;
        }

        public Object getValue3() {
            return value3;
        }

        public void setValue3(Object value3) {
            this.value3 = value3;
        }

        public Object getList() {
            return list;
        }

        public void setList(Object list) {
            this.list = list;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public void setNoValue(boolean noValue) {
            this.noValue = noValue;
        }

        public boolean isOneValue() {
            return oneValue;
        }

        public void setOneValue(boolean oneValue) {
            this.oneValue = oneValue;
        }

        public boolean isSecondValue() {
            return secondValue;
        }

        public void setSecondValue(boolean secondValue) {
            this.secondValue = secondValue;
        }

        public boolean isThirdValue() {
            return thirdValue;
        }

        public void setThirdValue(boolean thirdValue) {
            this.thirdValue = thirdValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public void setListValue(boolean listValue) {
            this.listValue = listValue;
        }
    }

}

